# DON'T PANIC! You don't have to read every note in these files. They are only
# there in case you want to understand what the code is doing. You can just
# replace the code with your own values and only read the notes if you have
# problems.

# This scenario is very simple. A scenario could work with even fewer events
# and tags, but almost every scenario includes all of the ones in this file.

# Set the textdomain first.
#textdomain wesnoth-wmlg
[scenario]

	name= _ "K Mostu"
	id=01_K_Mostu
	# You make the map in the map editor, and then insert the file here with
	# curly braces (like with folders in "_main.cfg"). Quotes are usually
	# optional, but in this line, you have to use them.
	map_data="{~add-ons/WML_Guide/maps/1_scenar.map}"
	next_scenario=02_Big_Bug
	
	# You can specify music tracks and an order to play them in, or use this
	# macro to shuffle through the whole music library.
	{DEFAULT_MUSIC_PLAYLIST}
	# The default schedule starts with dawn on the first turn, then morning,
	# afternoon, dusk, first watch, second watch, then back to dawn.
	{DEFAULT_SCHEDULE}
	# This is when the turns run out and you lose. The three numbers are for
	# the three levels of difficulty: EASY, NORMAL, and HARD.
	{TURNS 20 18 16}

	# A side tag includes the side's and the leader's attributes.
	[side]
		type=Elvish Lord
		name= _ "Harry Hacker"
		# The id doesn't have to match the name. It is just an internal
		# name for the scenario designer.
		id=harry
		facing=sw
		{FLAG_VARIANT wood-elvish}
		# End of leader definition. Start of side attributes.
		side=1
		controller=human
		user_team_name= _ "Good Guys"
		recruit=Elvish Fighter, Elvish Archer
		# This is the gold for the three levels of difficulty. It goes
		# down as the level goes up.
		{GOLD 100 80 60}
        [capture_village]
			side=1
			x, y=3, 3
		[/capture_village]
		[capture_village]
			side=2
			x, y=23, 3
			radius=5
		[/capture_village]
	[/side]

	[side]
#ifdef EASY
        type=Orcish_Leader
#endif
#ifdef NORMAL
        type=Orcish_Ruler
#endif
#ifdef HARD
        type=Orcish_Ruler
#endif
		name= _ "Darth Syntax"
		id=orcs
		facing=sw
		{FLAG_VARIANT6 ragged}
		side=2
		controller=ai
		user_team_name= _ "Ochránci lávky"
# Preprocessor commands start with a hash tag (#). They can be used to
# control the difficulty. "#ifdef" means "if defined", and will check to see
# if that variable exists. The game defines one difficulty variable based on
# which difficulty the player selected.
#ifdef EASY
		# If the player selected HARD, the enemy gets these units.
		recruit=Wolf Rider, Goblin Spearman
#else
		# Otherwise (on NORMAL and EASY), he just gets these.
		recruit=Wolf Rider, Goblin Spearman, Goblin Impaler
#endif
		# The enemy's gold goes up a lot as the level goes up.
		{GOLD 60 90 150}
	[/side]
	[event]
		# This name means that the event will be fired before the
		# scenario appears on screen.
		name=prestart
		# The [objectives] tag sets the objectives that will be shown to
		# the player, but does nothing to make them actually work. But,
		# since we are using the default win/loss conditions, we won't
		# need to code anything to make them work this time anyway.
		[objectives]
			side=1
			[objective]
				description= _ "Defeat the enemy leader"
				condition=win
			[/objective]
			[objective]
				description= _ "Death of Harry"
				condition=lose
			[/objective]
			[objective]
				description= _ "Run out of Turns"
				condition=lose
			[/objective]
			# This tag tells the player how much of the gold from this
			# scenario gets carried over to the next one. This is the
			# standard amount, but we will still need to specify it in
			# the victory conditions.
			[gold_carryover]
				bonus=yes
				carryover_percentage=40
			[/gold_carryover]
		[/objectives]
		[capture_village]
			side=1
			x=31,28
			y=4,11
		[/capture_village]
#ifdef EASY
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 15 6 ochranka1 (_ "Erung")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 17 3 ochranka2 (_ "Vilg")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 21 3 ochranka3 (_ "Rodash")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 23 6 ochranka4 (_ "Rash")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 17 9 ochranka5 (_ "Grang")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 21 9 ochranka6 (_ "Hinak")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 8 4 ochranka_mostu1 (_ "Hurt")}  {FACING sw}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 11 8 ochranka_mostu2 (_ "Virt")}  {FACING s}
#endif
#ifdef NORMAL
        {NAMED_LOYAL_UNIT 2 Goblin_Rouser 15 6 ochranka1 (_ "Erung")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Rouser 17 3 ochranka2 (_ "Vilg")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Rouser 21 3 ochranka3 (_ "Rodash")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Rouser 23 6 ochranka4 (_ "Rash")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Rouser 17 9 ochranka5 (_ "Grang")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Rouser 21 9 ochranka6 (_ "Hinak")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 18 2 ochranka7 (_ "Piragarar")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 22 3 ochranka8 (_ "Biol")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 23 7 ochranka9 (_ "Paol")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 20 9 ochranka10 (_ "Prork")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 16 8 ochranka11 (_ "Rarg")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 15 5 ochranka12 (_ "Higar")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Impaler 8 4 ochranka_mostu1 (_ "Hurt")}  {FACING sw}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 12 6 ochranka_mostu2 (_ "Gush")}  {FACING sw}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 7 6 ochranka_mostu3 (_ "Hilo")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Impaler 11 8 ochranka_mostu4 (_ "Virt")}  {FACING s}
#endif
#ifdef HARD
        {NAMED_LOYAL_UNIT 2 Goblin_Rouser 15 6 ochranka1 (_ "Erung")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Rouser 17 3 ochranka2 (_ "Vilg")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Rouser 21 3 ochranka3 (_ "Rodash")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Rouser 23 6 ochranka4 (_ "Rash")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Rouser 17 9 ochranka5 (_ "Grang")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Rouser 21 9 ochranka6 (_ "Hinak")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 18 2 ochranka7 (_ "Piragarar")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 22 3 ochranka8 (_ "Biol")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 23 7 ochranka9 (_ "Paol")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 20 9 ochranka10 (_ "Prork")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 16 8 ochranka11 (_ "Rarg")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 15 5 ochranka12 (_ "Higar")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 15 7 ochranka13 (_ "Hurg")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 16 3 ochranka14 (_ "Vanag")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 20 2 ochranka15 (_ "Hang")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 23 5 ochranka16 (_ "Grudishnak")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 22 8 ochranka17 (_ "Gash")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Spearman 18 9 ochranka18 (_ "Erong")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Impaler 8 4 ochranka_mostu1 (_ "Hurt")}  {FACING sw}
        {NAMED_LOYAL_UNIT 2 Goblin_Impaler 12 6 ochranka_mostu2 (_ "Gush")}  {FACING sw}
        {NAMED_LOYAL_UNIT 2 Goblin_Impaler 7 6 ochranka_mostu3 (_ "Hilo")}  {FACING s}
        {NAMED_LOYAL_UNIT 2 Goblin_Impaler 11 8 ochranka_mostu4 (_ "Virt")}  {FACING s}
#endif
		
	[/event]
	
	[event]
		# This event is fired just *after* the scenario appears on screen.
		name=start
		[message]
			# Use the unit's id to specify the speaker.
			speaker=darth
			message= _ "You and your friends will join me for eternity!"
		[/message]
		[message]
			speaker=harry
			message= _ "Not a chance. Your eternity is about to be cut short."
		[/message]
	[/event]
	
	# This event fires when all enemy leaders are dead. The event isn't
	# necessary to make the scenario end with a victory, but it *is*
	# necessary to make the gold carry over to the next scenario in the
	# standard way. If you leave out this event, gold will automatically
	# get carried over using an older system.
	[event]
		name=enemies defeated
		[endlevel]
			result=victory
			bonus=yes
			# This macro makes 40% of the gold get carried over to
			# the next scenario. (It's not really a new macro any
			# more, but it's too late to change the name.)
			{NEW_GOLD_CARRYOVER 40}
		[/endlevel]
    
		
	[/event]
[/scenario]
